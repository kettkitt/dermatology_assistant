import sbnz.blisskin.model.dto.*;
import sbnz.blisskin.model.enumerations.*;
import sbnz.blisskin.model.*;

rule "Skin issues matched"
    when
        MatchedIngredient(skinIssuePercentage != null)
        TreatmentRequest($patientSkinProperties: skinProperties)
        // $patientMoisture: $patientSkinProperties.moisture
        // $patientSebum: $patientSkinProperties.sebum
        // $patientElasticity: $patientSkinProperties.elasticity
        // $patientSensitivity: $patientSkinProperties.sensitivity
    then
end

rule "Best for hydration" extends "Skin issues matched"
    when
        $matchedIngredient: MatchedIngredient(ingredient.ingredientGroup == IngredientGroup.HYDRATION)
    then
end

rule "Best for exfoliants" extends "Skin issues matched"
    when
        $matchedIngredient: MatchedIngredient(ingredient.ingredientGroup == IngredientGroup.EXFOLIANT)
    then
end

rule "Best for antioxidants" extends "Skin issues matched"
    when
        $matchedIngredient: MatchedIngredient(ingredient.ingredientGroup == IngredientGroup.ANTIOXIDANT)
    then
end

rule "Best for skin restoring" extends "Skin issues matched"
    when
        $matchedIngredient: MatchedIngredient(ingredient.ingredientGroup == IngredientGroup.SKIN_RESTORING)
    then
end